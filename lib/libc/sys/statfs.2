.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)statfs.2	8.5 (Berkeley) 5/24/95
.\" $FreeBSD: src/lib/libc/sys/statfs.2,v 1.9.2.7 2001/12/14 18:34:01 ru Exp $
.\"
.Dd May 24, 1995
.Dt STATFS 2
.Os
.Sh NAME
.Nm statfs
.Nd get file system statistics
.Sh LIBRARY
.Lb libc
.Sh SYNOPSIS
.In sys/param.h
.In sys/mount.h
.Ft int
.Fn statfs "const char *path" "struct statfs *buf"
.Ft int
.Fn fstatfs "int fd" "struct statfs *buf"
.Sh DESCRIPTION
.Fn Statfs
returns information about a mounted file system.
.Fa Path
is the path name of any file within the mounted filesystem.
.Fa Buf
is a pointer to a
.Fn statfs
structure defined as follows:
.Bd -literal
typedef struct fsid { int32_t val[2]; } fsid_t; /* file system id type */

/*
 * file system statistics
 */

#define MFSNAMELEN 16	/* length of fs type name, including null */
#define MNAMELEN   90	/* length of buffer for returned name */

struct statfs {
long	f_bsize;	  /* fundamental file system block size */
long	f_iosize;	  /* optimal transfer block size */
long	f_blocks;	  /* total data blocks in file system */
long	f_bfree;	  /* free blocks in fs */
long	f_bavail;	  /* free blocks avail to non-superuser */
long	f_files;	  /* total file nodes in file system */
long	f_ffree;	  /* free file nodes in fs */
fsid_t	f_fsid;		  /* file system id */
uid_t	f_owner;	  /* user that mounted the filesystem */
int	f_type;		  /* type of filesystem */
int	f_flags;	  /* copy of mount flags */
long    f_syncwrites;	  /* count of sync writes since mount */
long    f_asyncwrites;	  /* count of async writes since mount */
char	f_fstypename[MFSNAMELEN];/* fs type name */
char	f_mntonname[MNAMELEN];	 /* mount point */
long    f_syncreads;		 /* count of sync reads since mount */
long    f_asyncreads;		 /* count of async reads since mount */
char	f_mntfromname[MNAMELEN]; /* mounted filesystem */
};
.Ed
The flags that may be returned include:
.Bl -tag -width MNT_SYNCHRONOUS
.It Dv MNT_RDONLY
The filesystem is mounted read-only;
Even the super-user may not write on it.
.It Dv MNT_NOEXEC
Files may not be executed from the filesystem.
.It Dv MNT_NOSUID
Setuid and setgid bits on files are not honored when they are executed.
.It Dv MNT_NODEV
Special files in the filesystem may not be opened.
.It Dv MNT_SYNCHRONOUS
All I/O to the filesystem is done synchronously.
.It Dv MNT_ASYNC
No filesystem I/O is done synchronously.
.It Dv MNT_LOCAL
The filesystem resides locally.
.It Dv MNT_QUOTA
The filesystem has quotas enabled on it.
.It Dv MNT_ROOTFS
Identifies the root filesystem.
.It Dv MNT_EXRDONLY
The filesystem is exported read-only.
.It Dv MNT_EXPORTED
The filesystem is exported for both reading and writing.
.It Dv MNT_DEFEXPORTED
The filesystem is exported for both reading and writing to any Internet host.
.It Dv MNT_EXPORTANON
The filesystem maps all remote accesses to the anonymous user.
.It Dv MNT_EXKERB
The filesystem is exported with Kerberos uid mapping.
.El
.Pp
Fields that are undefined for a particular file system are set to -1.
.Fn Fstatfs
returns the same information about an open file referenced by descriptor
.Fa fd .
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
.Fn Statfs
fails if one or more of the following are true:
.Bl -tag -width Er
.It Bq Er ENOTDIR
A component of the path prefix of
.Fa Path
is not a directory.
.It Bq Er ENAMETOOLONG
The length of a component of
.Fa path
exceeds 255 characters,
or the length of
.Fa path
exceeds 1023 characters.
.It Bq Er ENOENT
The file referred to by
.Fa path
does not exist.
.It Bq Er EACCES
Search permission is denied for a component of the path prefix of
.Fa path .
.It Bq Er ELOOP
Too many symbolic links were encountered in translating
.Fa path .
.It Bq Er EFAULT
.Fa Buf
or
.Fa path
points to an invalid address.
.It Bq Er EIO
An
.Tn I/O
error occurred while reading from or writing to the file system.
.El
.Pp
.Fn Fstatfs
fails if one or more of the following are true:
.Bl -tag -width Er
.It Bq Er EBADF
.Fa fd
is not a valid open file descriptor.
.It Bq Er EFAULT
.Fa Buf
points to an invalid address.
.It Bq Er EIO
An
.Tn I/O
error occurred while reading from or writing to the file system.
.El
.Sh HISTORY
The
.Fn statfs
function first appeared in
.Bx 4.4 .
